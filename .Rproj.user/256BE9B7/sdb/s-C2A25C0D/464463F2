{
    "collab_server" : "",
    "contents" : "library(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(gridExtra)\nlibrary(zoo)\nlibrary(reshape2)\nlibrary(tidyr)\n\n####################################\n####################################\n##FUNCOES##\n\ncalculaRisco <- function(pormes,meses,pqueda){\n  #pormes<-smmes\n  #meses<-6\n  #pqueda<-0.9\n  pormes$anomes <- as.yearmon(paste(pormes$month,\"/\",pormes$year,sep=\"\"),\"%m/%Y\")\n  pormes<-pormes[,c(1,4,6)]\n  #pega seis meses atras\n  \n  tabela<-pormes[pormes$anomes>=as.yearmon(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -((meses)/12), frac = 1))&\n                   pormes$anomes<as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")),]\n  tabela<-spread(tabela, key = anomes, value = TPV.month)\n  tabela<-na.omit(tabela)\n  \n  for (i in 1:(meses-1)){\n    tabela[,(dim(tabela)[2]+1)] <- tabela[,i+2]/tabela[,i+1]<=pqueda\n  }\n  \n  tabela$enviar.risco<- rowSums(tabela[,((meses+2):(2*meses))])>=(meses-2)\n  tabela$enviar.risco<- tabela[,dim(tabela)[2]-1]&tabela[,dim(tabela)[2]]\n  \n  desaceleraRisco<-tabela[tabela$enviar.risco==TRUE,]\n  \n  write.table(desaceleraRisco, file = paste(\"C:/Users/mauricio.chigutti/Google Drive/Risco/desaceleraRisco-\",as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\"),\".csv\",sep=\"\"), sep = \";\", na = \"\",row.names=FALSE,dec=\",\")\n  \n  final <- tabela[,c(1,dim(tabela)[2])]\n  \n  return(final)\n}\n\nplanilhaIdVendedor <- function (hubspot){\n    hubspot <- hubspot[hubspot$Owner.ID!=\"\",]\n    hubspot <- hubspot[order(hubspot$Owner.ID),]\n    write.table(hubspot, file = paste(\"C:/Users/mauricio.chigutti/Google Drive/Clientes do Comercial/clientesComercial.csv\",sep=\"\"), sep = \";\", na = \"\",row.names=FALSE)\n    \n}\n\n####################################\n####################################\n##DATA FROM THE LAST 6 years only##\n\nsetwd(\"C:/Users/mauricio.chigutti/Google Drive/Atualiza Tudo Hub\")\n## baixar em https://analytics.totvs.com.br/#s=/gdc/projects/v0jnh3a7fn8elqtifaa0fjuy16pphbvr|analysisPage|head|/gdc/md/v0jnh3a7fn8elqtifaa0fjuy16pphbvr/obj/67752\n## TPV authorized, Receita Authorized, Date, account id, super integrator, user category (sem deposito e transf)\ngoodata<-read.csv(\"tpv_cond_fat_plat link by id by day.csv\")\nnames(goodata)<- c(\"Account.Id\",\"ConditionN\",\"Payment.Form\",\"Date\", \"Integrador\", \"TPV\", \"Receita\")\ngoodata$Date<-as.Date(goodata$Date, \"%d-%m-%Y\")\n\ngoodata2<-goodata\ngoodata2$Integrador<- as.character(goodata2$Integrador)\ngoodata2$month <- month(goodata2$Date)\ngoodata2$year <- year(goodata2$Date)\n\n##baixar https://app.hubspot.com/lists/253924/list/2369/ \n##todos contatos do hubspot com Email, TPV hoje, TPV Mes -1, TPV Mes -2, Account ID,  faturamento_grupo, \n##TPV Mes, TPV ontem, Condition, TPV Projetado, TPV TOtal, Receita Mes, Receita Total, plataforma_bd, TPV Max\nhubspot<-read.csv(\"hubspot-contacts-all-contacts-com-account-id.csv\",fileEncoding = \"UTF-8-BOM\")\nhubspot2<-hubspot[,c(which(names(hubspot)==\"Email\"),which(names(hubspot)==\"Account.Id\"))]\n##Agrupa por dia\ngrp_id_dia <- group_by(goodata2,Account.Id,Date)\nsmdia<-summarise(grp_id_dia, TPV.dia=sum(TPV))\n#calcula TPV ontem e hoje\nanteontem<-smdia[smdia$Date==seq(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\"), length = 2, by = \"-2 day\")[2],,drop=F][,c(1,3)]\nnames(anteontem)<- c(\"Account.Id\",\"TPV Anteontem\")\nontem<-smdia[smdia$Date==seq(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\"), length = 2, by = \"-1 day\")[2],,drop=F][,c(1,3)]\nnames(ontem)<- c(\"Account.Id\",\"TPV Ontem\")\n\nfdTPV <- aggregate(Date ~ Account.Id, smdia, min)\nnames(fdTPV)<- c(\"Account.Id\",\"First Day TPV\")\nfdTPV$`First Day TPV` <- format(fdTPV$`First Day TPV`, \"%d/%m/%Y\")\nldTPV<- aggregate(Date ~ Account.Id, smdia, max)\nldTPV$LastMonthTPV <- as.Date(paste(\"01/\",month(ldTPV$Date),\"/\",year(ldTPV$Date),sep=\"\"),\"%d/%m/%Y\")\nnames(ldTPV)<- c(\"Account.Id\",\"Last Day TPV\",\"Last Month TPV\")\nldTPV$`Last Day TPV` <- format(ldTPV$`Last Day TPV`, \"%d/%m/%Y\")\nldTPV$`Last Month TPV` <- format(ldTPV$`Last Month TPV`, \"%d/%m/%Y\")\n\n##agrupa ids por mes \ngrp_id_TPVmes <- group_by(goodata2,Account.Id,month,year)\nsmmes <- summarise(grp_id_TPVmes, TPV.month=sum(TPV), Receita.month=(sum(Receita)))\n#calcula para meses anteriores e ultimo mes com TPV\nmes3<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(3/12), frac = 1)) & \n              smmes$year==year(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(3/12), frac = 1)),,drop = F][,c(1,4)]\nnames(mes3)<- c(\"Account.Id\",\"TPV Mes -3\")\n\nmes2<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(2/12), frac = 1)) &\n              smmes$year==year(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(2/12), frac = 1)),,drop = F][,c(1,4)]\nnames(mes2)<- c(\"Account.Id\",\"TPV Mes -2\")\n\nmes1<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(1/12), frac = 1)) &\n              smmes$year==year(as.Date(as.yearmon(as.Date(now(),\"%Y-%m-%d\", tz=\"America/Sao_Paulo\")) -(1/12), frac = 1)),,drop = F][,c(1,4)]\nnames(mes1)<- c(\"Account.Id\",\"TPV Mes -1\")\nessemes <-smmes[smmes$month==month(now())&smmes$year==year(now()),,drop=F][,c(1,4,5)]\nnames(essemes)<- c(\"Account.Id\",\"TPV Mes\",\"Receita Mes\")\n\n#queda constante durante 6 meses\nenviar.risco<-calculaRisco(smmes,6,0.9)\n\n#TPV ano\ngrp_TPVano<- group_by(smmes[smmes$year==year(now()),,drop=F],Account.Id)\nTPVano<-summarise(grp_TPVano, TPV.ano=sum(TPV.month), Receita.ano=(sum(Receita.month)))\n\n##Calcula TPV max, total e Receita total \ngrp_id_mes <- group_by(goodata2,Account.Id,ConditionN,month,year)\nsm1 <- summarise(grp_id_mes, TPV.month=sum(TPV), Receita.month=(sum(Receita)))\n\ngrp_id <- group_by(sm1,Account.Id,ConditionN)\nsm2 <- summarise(grp_id,TPV.max = max(TPV.month), TPV.Total2 = sum(TPV.month), \n                 Receita.Total=sum(Receita.month))\n#adiciona grupo de faturamento\nsm2$Faturamento_Grupo<-NA\nsm2$Faturamento_Grupo[sm2$TPV.max >=0 & sm2$TPV.max <1000] <- \"F0\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=1000 & sm2$TPV.max <5000] <- \"F1\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=5000 & sm2$TPV.max <20000] <- \"F2\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=20000 & sm2$TPV.max <100000] <- \"F3\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=100000 & sm2$TPV.max <500000] <- \"F4\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=500000 & sm2$TPV.max <1000000] <- \"F5\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=1000000 & sm2$TPV.max <5000000] <- \"F6\"\nsm2$Faturamento_Grupo[sm2$TPV.max >=5000000 & sm2$TPV.max] <- \"F7\"\n\n##agrupa plat e payment\ngrp_plat <- group_by(goodata2,Account.Id,Integrador)\nsmplat <- summarise(grp_plat)\ngrp_plat2 <- group_by(smplat,Account.Id)\nsmplat2 <- summarise(grp_plat2, Integrador = paste(Integrador, collapse = \";\"))\n\ngrp_payment <- group_by(goodata2,Account.Id,Payment.Form)\nsmpayment <- summarise(grp_payment, sum(TPV))\n\nTPVBoleto <- smpayment[smpayment$Payment.Form==\"Boleto\",c(1,3),drop=F]\nnames(TPVBoleto)<- c(\"Account.Id\",\"TPVBoleto\")\nTPVCartaoC <- smpayment[smpayment$Payment.Form==\"Cartao de Credito\",c(1,3),drop=F]\nnames(TPVCartaoC)<- c(\"Account.Id\",\"TPVCartaoC\")\nTPVTransf <- smpayment[smpayment$Payment.Form==\"Transferencia\",c(1,3),drop=F]\nnames(TPVTransf)<- c(\"Account.Id\",\"TPVTransf\")\nTPVCarteiraM <- smpayment[smpayment$Payment.Form==\" Carteira Moip\",c(1,3),drop=F]\nnames(TPVCarteiraM)<- c(\"Account.Id\",\"TPVCarteiraM\")\nTPVCartaoD <- smpayment[smpayment$Payment.Form==\"Cartao de Debito\",c(1,3),drop=F]\nnames(TPVCartaoD)<- c(\"Account.Id\",\"TPVCartaoD\")\nTPVFinanci <- smpayment[smpayment$Payment.Form==\"Financiamento\",c(1,3),drop=F]\nnames(TPVFinanci)<- c(\"Account.Id\",\"TPVFinanci\")\nTPVCDMPOS <- smpayment[smpayment$Payment.Form==\"Cartao de Debito - MPOS\",c(1,3),drop=F]\nnames(TPVCDMPOS)<- c(\"Account.Id\",\"TPVCDMPOS\")\nTPVCCMPOS <- smpayment[smpayment$Payment.Form==\"Cartao de Credito - MPOS\",c(1,3),drop=F]\nnames(TPVCCMPOS)<- c(\"Account.Id\",\"TPVCCMPOS\")\n\ngrp_payment2 <- group_by(smpayment,Account.Id)\nsmpayment2 <- summarise(grp_payment2,payment = paste(Payment.Form, collapse = \";\"))\n\n\n##merge mantendo tds ids -> mes-2,mes-1,mes,tpv ontem e tpv hoje com sm3\ngooMerge<-Reduce(function(x, y) merge(x, y, by = \"Account.Id\", all=TRUE), list(anteontem, ontem, mes3, mes2, mes1, essemes, sm2, smplat2, smpayment2, \n                                                                               ldTPV, fdTPV,TPVBoleto,TPVCartaoC,TPVTransf,TPVCarteiraM,TPVCartaoD,\n                                                                               TPVFinanci,TPVCDMPOS,TPVCCMPOS,TPVano,enviar.risco))\ngooMerge$enviar.risco[is.na(gooMerge$enviar.risco)]<-FALSE\n\nTPVmerge <- merge(hubspot2,gooMerge, by = \"Account.Id\")\nTPVsaida<- TPVmerge\n\nTPVsaida$TPV.Projetado <- rowMeans(TPVsaida[,c(5:7)])\nTPVsaida$TPV.Projetado <- as.numeric(format(TPVsaida$TPV.Projetado, digits=3, scientific = F))\n\nnames(TPVsaida)<- c(\"Account.Id\",\"Email\",\"TPV Anteontem\",\"TPV Ontem\",\"TPV Mes -3\",\"TPV Mes -2\", \"TPV Mes -1\",\"TPV Mes\",\"Receita Mes\",\"Condition\",\n                     \"TPV Max\",\"Total TPV\",\"Receita.Total\",\"Faturamento_Grupo\",\"plataform_bd\",\"payment form gd\",\"Last Day TPV\", \"Last Month TPV\",\n                     \"First Day TPV\", \"TPV.Boleto\",\"TPV.Cartao.Credito\",\"TPV.Transferencia\",\"TPV.Carteira.Moip\",\"TPV.Cartao.Debito\",\"TPV.Financiamento\",\n                    \"TPV.CDMPOS\", \"TPV.CCMPOS\",\"TPV.Ano\",\"Receita.Ano\",\"Enviar.Risco\",\"TPV.Projetado\")\n\n##Calcula porcentagens\nTPVsaida$Receita.TPV.Mes <- 100*as.numeric(format(TPVsaida$`Receita Mes`/TPVsaida$`TPV Mes`, digits=3, scientific = F))\nTPVsaida$TPV.Ontem.Anteontem <- 100*as.numeric(format(TPVsaida$`TPV Ontem`/TPVsaida$`TPV Anteontem`, digits=3, scientific = F))\nTPVsaida$TPV.Mes.Mes.1 <- 100*as.numeric(format(TPVsaida$`TPV Mes -1`/TPVsaida$`TPV Mes -2`, digits=3, scientific = F))\n\nTPVsaida$PBoleto <- 100*as.numeric(format(TPVsaida$TPV.Boleto/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PCartao.Credito <- 100*as.numeric(format(TPVsaida$TPV.Cartao.Credito/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PTransferencia <- 100*as.numeric(format(TPVsaida$TPV.Transferencia/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PCarteira.Moip <- 100*as.numeric(format(TPVsaida$TPV.Carteira.Moip/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PCartao.Debito <- 100*as.numeric(format(TPVsaida$TPV.Cartao.Debito/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PFinanciamento <- 100*as.numeric(format(TPVsaida$TPV.Financiamento/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PCDMPOS <- 100*as.numeric(format(TPVsaida$TPV.CDMPOS/TPVsaida$`Total TPV`, digits=3, scientific = F))\nTPVsaida$PCCMPOS <- 100*as.numeric(format(TPVsaida$TPV.CCMPOS/TPVsaida$`Total TPV`, digits=3, scientific = F))\n\nTPVsaida$`TPV Anteontem`[is.na(TPVsaida$`TPV Anteontem`)] <- 0\nTPVsaida$`TPV Ontem`[is.na(TPVsaida$`TPV Ontem`)] <- 0\nTPVsaida$`TPV Mes -3`[is.na(TPVsaida$`TPV Mes -3`)] <- 0\nTPVsaida$`TPV Mes -2`[is.na(TPVsaida$`TPV Mes -2`)] <- 0\nTPVsaida$`TPV Mes -1`[is.na(TPVsaida$`TPV Mes -1`)] <- 0\nTPVsaida$`TPV Mes`[is.na(TPVsaida$`TPV Mes`)] <- 0\nTPVsaida$`Receita Mes`[is.na(TPVsaida$`Receita Mes`)] <- 0\nTPVsaida$`TPV Max`[is.na(TPVsaida$`TPV Max`)] <- 0\nTPVsaida$`Total TPV`[is.na(TPVsaida$`Total TPV`)] <- 0\nTPVsaida$Receita.Total[is.na(TPVsaida$Receita.Total)] <- 0\nTPVsaida$TPV.Ano[is.na(TPVsaida$TPV.Ano)] <- 0\nTPVsaida$Receita.Ano[is.na(TPVsaida$Receita.Ano)] <- 0\nTPVsaida$TPV.Ontem.Anteontem[is.na(TPVsaida$TPV.Ontem.Anteontem)] <- 0\nTPVsaida$TPV.Mes.Mes.1[is.na(TPVsaida$TPV.Mes.Mes.1)] <- 0\n\nwrite.table(TPVsaida, file = \"TPV tudo total hub.csv\", sep = \";\", na = \"\",row.names=FALSE,dec=\".\")\nplanilhaIdVendedor(hubspot)\n####################################\n####################################\n###OPCIONAL##\n\n##churn\n#churngoo<-gooMerge[!is.na(gooMerge$TPV.ano) & is.na(gooMerge$`TPV Mes -1`) & is.na(gooMerge$`TPV Mes`) & gooMerge$Faturamento_Grupo%in%c(\"F3\",\"F4\",\"F5\",\"F6\",\"F7\"),,drop=F]\n#base relacionamentos:\n#https://analytics.totvs.com.br/#s=/gdc/projects/v0jnh3a7fn8elqtifaa0fjuy16pphbvr|analysisPage|head|/gdc/md/v0jnh3a7fn8elqtifaa0fjuy16pphbvr/obj/59376\n#relacionamentos <- read.csv(\"Base Congelada 2016 - Mauricio.csv\")[1:3]\n#names(relacionamentos)<-c(\"login\",\"account.owner\",\"Account.Id\")\n#churnreal<-merge(churn, relacionamentos, by = \"Account.Id\")\n#x<-churn[churn$Account.Id%in%setdiff(churn$Account.Id,relacionamentos$Account.Id),,drop=F]\n#x$login<-NA\n#x$account.owner<-NA\n#churnreal2<-rbind(churnreal,x)\n#write.table(churnreal2, file = \"churnMoip.csv\", sep = \";\", na = \"\",row.names=FALSE,dec=\",\")\n\n##queda brusca\n#gooMerge$queda<-100*gooMerge$`TPV Mes -1`/gooMerge$`TPV Mes -2`\n#p_churn<- gooMerge[!is.na(gooMerge$queda) & gooMerge$queda<=20 & gooMerge$Faturamento_Grupo%in%c(\"F3\",\"F4\",\"F5\",\"F6\",\"F7\"),,]\n\n##calcula difetenc?a pro hub\n#x<-setdiff(gooMerge$Account.Id,TPVsaida$Account.Id)\n#investigar<-gooMerge[gooMerge$Account.Id%in%x & gooMerge$ConditionN==\"ATIVO\" & gooMerge$Faturamento_Grupo%in%c(\"F3\",\"F4\",\"F5\",\"F6\",\"F7\") & (gooMerge$Integrador==\"\" | gooMerge$Integrador==\";\"| gooMerge$Integrador==\";                                                                           \"),,drop=F]\n\n##escreve arquivos de saida\n#write.table(gooMerge, file = \"gooMerge.csv\", sep = \";\", na = \"\",row.names=FALSE,dec=\",\")\n#write.table(investigar, file = \"investigar.csv\", sep = \";\", na = \"\",row.names=FALSE,dec=\",\")\n#write.table(investigar, file = \"churn.csv\", sep = \";\", na = \"\",row.names=FALSE,dec=\",\")\n\n",
    "created" : 1500394053226.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4033993623",
    "id" : "464463F2",
    "lastKnownWriteTime" : 1500325429,
    "last_content_update" : 1500325429,
    "path" : "C:/Users/mauricio.chigutti/Google Drive/Atualiza Tudo Hub/atualizaHub_v3.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}