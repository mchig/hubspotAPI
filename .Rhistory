library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(zoo)
library(reshape2)
library(tidyr)
criaGrupodeFaturamento(type="tri")
plataforma = unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento prÃ³prio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)=="")),
which(unique(contatosD$ecommerce_platform)=="Marketplace prÃ³prio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7")]
plataforma = unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento prÃ³prio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)=="")),
which(unique(contatosD$ecommerce_platform)=="Marketplace prÃ³prio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"),]
plataforma = unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)=="")),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7")]
plataforma = unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio")),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)=="")),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7")]
plataforma = unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"))]
criaGrupodeFaturamento(contatodD, type="tri", ecommerce_platform = plataforma)
criaGrupodeFaturamento(contatosD, type="tri", ecommerce_platform = plataforma)
x =criaGrupodeFaturamento(contatosD, type="tri", ecommerce_platform = plataforma,Q=2)
plotGruposdeFaturamento(x)
x =criaGrupodeFaturamento(contatosD, type="tri", ecommerce_platform = plataforma,Q=1)
plotGruposdeFaturamento(x)
formatContactcsv(criaFunilComercial(contatosD, type="tri", ecommerce_platform = plataforma,Q=1))
a = filtraContatos(criaFunilComercial(contatosD, type="tri", ecommerce_platform = plataforma,Q=1))
library(hubspotAPI)
a = filtraContatos(criaFunilComercial(contatosD, type="tri", ecommerce_platform = plataforma,Q=1))
a = filtraContatos((contatosD, type="tri", ecommerce_platform = plataforma,Q=1))
a = filtraContatos(contatosD, type="tri", ecommerce_platform = plataforma,Q=1)
View(a)
a[a$estagio=="Convertido"&a$faturamento_grupo%in%"F5",]
b = a[a$estagio=="Convertido"&a$faturamento_grupo%in%"F5",]
View(b)
View(contatosD)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
contatosD <- suppressWarnings(arrangeDate (read.csv("contatos.csv", sep = ",",stringsAsFactors = FALSE)))
a = filtraContatos(contatosD, type="tri", ecommerce_platform = plataforma,Q=1)
a[a$estagio=="Convertido"&a$faturamento_grupo%in%"F5",]
b = a[a$estagio=="Convertido"&a$faturamento_grupo%in%"F5",]
View(b)
View(contatosD)
dataRef <- as.Date(paste(year(now()),"-01-01",sep=""))
dataRef
dataFinal <- dataRef
month(dataFinal) <- month(dataRef) + 2
day(dataFinal) <- days_in_month(dataFinal)
dataFinal
vendedor <- unique(contatos$hubspot_owner_name)
lead_source_geral <- unique(contatos$lead_source_geral_new)
lead_source <- unique(contatos$lead_source_new)
contatos = contatosD
vendedor <- unique(contatos$hubspot_owner_name)
lead_source_geral <- unique(contatos$lead_source_geral_new)
lead_source <- unique(contatos$lead_source_new)
ecommerce_platform <- unique(contatos$ecommerce_platform)
dataRef <- as.Date(paste(year(now()),"-01-01",sep=""))
dataFinal <- dataRef
month(dataFinal) <- month(dataRef) + 2
day(dataFinal) <- days_in_month(dataFinal)
convertido <- contatosD[(!is.na(contatosD$convertido_date) &
(contatosD$convertido_date>=dataRef) &
(contatosD$convertido_date<=dataFinal) &
contatosD$hubspot_owner_name%in%vendedor &
contatosD$lead_source_geral_new%in%lead_source_geral &
contatosD$lead_source_new%in%lead_source &
contatosD$ecommerce_platform%in%ecommerce_platform &
contatos$deal_stage=="Convertido"),]
View(convertido)
a = filtraContatos(contatosD, type="tri",Q=1)
plotGruposdeFaturamento(a)
plotGruposdeFaturamento(contatosD, type="tri",Q=1)
a = criaGrupodeFaturamento(contatosD, type="tri",Q=1)
plotGruposdeFaturamento(a)
library(hubspotAPI)
library(dplyr)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(zoo)
library(reshape2)
library(tidyr)
####################################
####################################
##FUNCOES##
calculaRisco <- function(pormes,meses,pqueda){
#pormes<-smmes
#meses<-6
#pqueda<-0.9
pormes$anomes <- as.yearmon(paste(pormes$month,"/",pormes$year,sep=""),"%m/%Y")
pormes<-pormes[,c(1,4,6)]
#pega seis meses atras
tabela<-pormes[pormes$anomes>=as.yearmon(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -((meses)/12), frac = 1))&
pormes$anomes<as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")),]
tabela<-spread(tabela, key = anomes, value = TPV.month)
tabela<-na.omit(tabela)
for (i in 1:(meses-1)){
tabela[,(dim(tabela)[2]+1)] <- tabela[,i+2]/tabela[,i+1]<=pqueda
}
tabela$enviar.risco<- rowSums(tabela[,((meses+2):(2*meses))])>=(meses-2)
tabela$enviar.risco<- tabela[,dim(tabela)[2]-1]&tabela[,dim(tabela)[2]]
desaceleraRisco<-tabela[tabela$enviar.risco==TRUE,]
write.table(desaceleraRisco, file = paste("C:/Users/mauricio.chigutti/Google Drive/Risco/desaceleraRisco-",as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo"),".csv",sep=""), sep = ";", na = "",row.names=FALSE,dec=",")
final <- tabela[,c(1,dim(tabela)[2])]
return(final)
}
planilhaIdVendedor <- function (hubspot){
hubspot <- hubspot[hubspot$Owner.ID!="",]
hubspot <- hubspot[order(hubspot$Owner.ID),]
write.table(hubspot, file = paste("C:/Users/mauricio.chigutti/Google Drive/Clientes do Comercial/clientesComercial.csv",sep=""), sep = ";", na = "",row.names=FALSE)
}
####################################
####################################
##DATA FROM THE LAST 6 years only##
setwd("C:/Users/mauricio.chigutti/Google Drive/Atualiza Tudo Hub")
## baixar em https://analytics.totvs.com.br/#s=/gdc/projects/v0jnh3a7fn8elqtifaa0fjuy16pphbvr|analysisPage|head|/gdc/md/v0jnh3a7fn8elqtifaa0fjuy16pphbvr/obj/67752
## TPV authorized, Receita Authorized, Date, account id, super integrator, user category (sem deposito e transf)
goodata<-read.csv("tpv_cond_fat_plat link by id by day.csv")
names(goodata)<- c("Account.Id","ConditionN","Payment.Form","Date", "Integrador", "TPV", "Receita")
goodata$Date<-as.Date(goodata$Date, "%d-%m-%Y")
goodata2<-goodata
goodata2$Integrador<- as.character(goodata2$Integrador)
goodata2$month <- month(goodata2$Date)
goodata2$year <- year(goodata2$Date)
##baixar https://app.hubspot.com/lists/253924/list/2369/
##todos contatos do hubspot com Email, TPV hoje, TPV Mes -1, TPV Mes -2, Account ID,  faturamento_grupo,
##TPV Mes, TPV ontem, Condition, TPV Projetado, TPV TOtal, Receita Mes, Receita Total, plataforma_bd, TPV Max
hubspot<-read.csv("hubspot-contacts-all-contacts-com-account-id.csv",fileEncoding = "UTF-8-BOM")
hubspot2<-hubspot[,c(which(names(hubspot)=="Email"),which(names(hubspot)=="Account.Id"))]
##Agrupa por dia
grp_id_dia <- group_by(goodata2,Account.Id,Date)
smdia<-summarise(grp_id_dia, TPV.dia=sum(TPV))
#calcula TPV ontem e hoje
anteontem<-smdia[smdia$Date==seq(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo"), length = 2, by = "-2 day")[2],,drop=F][,c(1,3)]
names(anteontem)<- c("Account.Id","TPV Anteontem")
ontem<-smdia[smdia$Date==seq(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo"), length = 2, by = "-1 day")[2],,drop=F][,c(1,3)]
names(ontem)<- c("Account.Id","TPV Ontem")
fdTPV <- aggregate(Date ~ Account.Id, smdia, min)
names(fdTPV)<- c("Account.Id","First Day TPV")
fdTPV$`First Day TPV` <- format(fdTPV$`First Day TPV`, "%d/%m/%Y")
ldTPV<- aggregate(Date ~ Account.Id, smdia, max)
ldTPV$LastMonthTPV <- as.Date(paste("01/",month(ldTPV$Date),"/",year(ldTPV$Date),sep=""),"%d/%m/%Y")
names(ldTPV)<- c("Account.Id","Last Day TPV","Last Month TPV")
ldTPV$`Last Day TPV` <- format(ldTPV$`Last Day TPV`, "%d/%m/%Y")
ldTPV$`Last Month TPV` <- format(ldTPV$`Last Month TPV`, "%d/%m/%Y")
##agrupa ids por mes
grp_id_TPVmes <- group_by(goodata2,Account.Id,month,year)
smmes <- summarise(grp_id_TPVmes, TPV.month=sum(TPV), Receita.month=(sum(Receita)))
#calcula para meses anteriores e ultimo mes com TPV
mes3<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(3/12), frac = 1)) &
smmes$year==year(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(3/12), frac = 1)),,drop = F][,c(1,4)]
names(mes3)<- c("Account.Id","TPV Mes -3")
mes2<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(2/12), frac = 1)) &
smmes$year==year(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(2/12), frac = 1)),,drop = F][,c(1,4)]
names(mes2)<- c("Account.Id","TPV Mes -2")
mes1<-smmes[smmes$month==month(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(1/12), frac = 1)) &
smmes$year==year(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -(1/12), frac = 1)),,drop = F][,c(1,4)]
names(mes1)<- c("Account.Id","TPV Mes -1")
essemes <-smmes[smmes$month==month(now())&smmes$year==year(now()),,drop=F][,c(1,4,5)]
names(essemes)<- c("Account.Id","TPV Mes","Receita Mes")
#queda constante durante 6 meses
enviar.risco<-calculaRisco(smmes,6,0.9)
#TPV ano
grp_TPVano<- group_by(smmes[smmes$year==year(now()),,drop=F],Account.Id)
TPVano<-summarise(grp_TPVano, TPV.ano=sum(TPV.month), Receita.ano=(sum(Receita.month)))
##Calcula TPV max, total e Receita total
grp_id_mes <- group_by(goodata2,Account.Id,ConditionN,month,year)
sm1 <- summarise(grp_id_mes, TPV.month=sum(TPV), Receita.month=(sum(Receita)))
grp_id <- group_by(sm1,Account.Id,ConditionN)
sm2 <- summarise(grp_id,TPV.max = max(TPV.month), TPV.Total2 = sum(TPV.month),
Receita.Total=sum(Receita.month))
#adiciona grupo de faturamento
sm2$Faturamento_Grupo<-NA
sm2$Faturamento_Grupo[sm2$TPV.max >=0 & sm2$TPV.max <1000] <- "F0"
sm2$Faturamento_Grupo[sm2$TPV.max >=1000 & sm2$TPV.max <5000] <- "F1"
sm2$Faturamento_Grupo[sm2$TPV.max >=5000 & sm2$TPV.max <20000] <- "F2"
sm2$Faturamento_Grupo[sm2$TPV.max >=20000 & sm2$TPV.max <100000] <- "F3"
sm2$Faturamento_Grupo[sm2$TPV.max >=100000 & sm2$TPV.max <500000] <- "F4"
sm2$Faturamento_Grupo[sm2$TPV.max >=500000 & sm2$TPV.max <1000000] <- "F5"
sm2$Faturamento_Grupo[sm2$TPV.max >=1000000 & sm2$TPV.max <5000000] <- "F6"
sm2$Faturamento_Grupo[sm2$TPV.max >=5000000 & sm2$TPV.max] <- "F7"
##agrupa plat e payment
grp_plat <- group_by(goodata2,Account.Id,Integrador)
smplat <- summarise(grp_plat)
grp_plat2 <- group_by(smplat,Account.Id)
smplat2 <- summarise(grp_plat2, Integrador = paste(Integrador, collapse = ";"))
grp_payment <- group_by(goodata2,Account.Id,Payment.Form)
smpayment <- summarise(grp_payment, sum(TPV))
TPVBoleto <- smpayment[smpayment$Payment.Form=="Boleto",c(1,3),drop=F]
names(TPVBoleto)<- c("Account.Id","TPVBoleto")
TPVCartaoC <- smpayment[smpayment$Payment.Form=="Cartao de Credito",c(1,3),drop=F]
names(TPVCartaoC)<- c("Account.Id","TPVCartaoC")
TPVTransf <- smpayment[smpayment$Payment.Form=="Transferencia",c(1,3),drop=F]
names(TPVTransf)<- c("Account.Id","TPVTransf")
TPVCarteiraM <- smpayment[smpayment$Payment.Form==" Carteira Moip",c(1,3),drop=F]
names(TPVCarteiraM)<- c("Account.Id","TPVCarteiraM")
TPVCartaoD <- smpayment[smpayment$Payment.Form=="Cartao de Debito",c(1,3),drop=F]
names(TPVCartaoD)<- c("Account.Id","TPVCartaoD")
TPVFinanci <- smpayment[smpayment$Payment.Form=="Financiamento",c(1,3),drop=F]
names(TPVFinanci)<- c("Account.Id","TPVFinanci")
TPVCDMPOS <- smpayment[smpayment$Payment.Form=="Cartao de Debito - MPOS",c(1,3),drop=F]
names(TPVCDMPOS)<- c("Account.Id","TPVCDMPOS")
TPVCCMPOS <- smpayment[smpayment$Payment.Form=="Cartao de Credito - MPOS",c(1,3),drop=F]
names(TPVCCMPOS)<- c("Account.Id","TPVCCMPOS")
grp_payment2 <- group_by(smpayment,Account.Id)
smpayment2 <- summarise(grp_payment2,payment = paste(Payment.Form, collapse = ";"))
##merge mantendo tds ids -> mes-2,mes-1,mes,tpv ontem e tpv hoje com sm3
gooMerge<-Reduce(function(x, y) merge(x, y, by = "Account.Id", all=TRUE), list(anteontem, ontem, mes3, mes2, mes1, essemes, sm2, smplat2, smpayment2,
ldTPV, fdTPV,TPVBoleto,TPVCartaoC,TPVTransf,TPVCarteiraM,TPVCartaoD,
TPVFinanci,TPVCDMPOS,TPVCCMPOS,TPVano,enviar.risco))
gooMerge$enviar.risco[is.na(gooMerge$enviar.risco)]<-FALSE
TPVmerge <- merge(hubspot2,gooMerge, by = "Account.Id")
TPVsaida<- TPVmerge
TPVsaida$TPV.Projetado <- rowMeans(TPVsaida[,c(5:7)])
TPVsaida$TPV.Projetado <- as.numeric(format(TPVsaida$TPV.Projetado, digits=3, scientific = F))
names(TPVsaida)<- c("Account.Id","Email","TPV Anteontem","TPV Ontem","TPV Mes -3","TPV Mes -2", "TPV Mes -1","TPV Mes","Receita Mes","Condition",
"TPV Max","Total TPV","Receita.Total","Faturamento_Grupo","plataform_bd","payment form gd","Last Day TPV", "Last Month TPV",
"First Day TPV", "TPV.Boleto","TPV.Cartao.Credito","TPV.Transferencia","TPV.Carteira.Moip","TPV.Cartao.Debito","TPV.Financiamento",
"TPV.CDMPOS", "TPV.CCMPOS","TPV.Ano","Receita.Ano","Enviar.Risco","TPV.Projetado")
##Calcula porcentagens
TPVsaida$Receita.TPV.Mes <- 100*as.numeric(format(TPVsaida$`Receita Mes`/TPVsaida$`TPV Mes`, digits=3, scientific = F))
TPVsaida$TPV.Ontem.Anteontem <- 100*as.numeric(format(TPVsaida$`TPV Ontem`/TPVsaida$`TPV Anteontem`, digits=3, scientific = F))
TPVsaida$TPV.Mes.Mes.1 <- 100*as.numeric(format(TPVsaida$`TPV Mes -1`/TPVsaida$`TPV Mes -2`, digits=3, scientific = F))
TPVsaida$PBoleto <- 100*as.numeric(format(TPVsaida$TPV.Boleto/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PCartao.Credito <- 100*as.numeric(format(TPVsaida$TPV.Cartao.Credito/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PTransferencia <- 100*as.numeric(format(TPVsaida$TPV.Transferencia/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PCarteira.Moip <- 100*as.numeric(format(TPVsaida$TPV.Carteira.Moip/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PCartao.Debito <- 100*as.numeric(format(TPVsaida$TPV.Cartao.Debito/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PFinanciamento <- 100*as.numeric(format(TPVsaida$TPV.Financiamento/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PCDMPOS <- 100*as.numeric(format(TPVsaida$TPV.CDMPOS/TPVsaida$`Total TPV`, digits=3, scientific = F))
TPVsaida$PCCMPOS <- 100*as.numeric(format(TPVsaida$TPV.CCMPOS/TPVsaida$`Total TPV`, digits=3, scientific = F))
write.table(TPVsaida, file = "TPV tudo total hub.csv", sep = ";", na = "",row.names=FALSE,dec=".")
planilhaIdVendedor(hubspot)
####################################
####################################
###OPCIONAL##
##churn
#churngoo<-gooMerge[!is.na(gooMerge$TPV.ano) & is.na(gooMerge$`TPV Mes -1`) & is.na(gooMerge$`TPV Mes`) & gooMerge$Faturamento_Grupo%in%c("F3","F4","F5","F6","F7"),,drop=F]
#base relacionamentos:
#https://analytics.totvs.com.br/#s=/gdc/projects/v0jnh3a7fn8elqtifaa0fjuy16pphbvr|analysisPage|head|/gdc/md/v0jnh3a7fn8elqtifaa0fjuy16pphbvr/obj/59376
#relacionamentos <- read.csv("Base Congelada 2016 - Mauricio.csv")[1:3]
#names(relacionamentos)<-c("login","account.owner","Account.Id")
#churnreal<-merge(churn, relacionamentos, by = "Account.Id")
#x<-churn[churn$Account.Id%in%setdiff(churn$Account.Id,relacionamentos$Account.Id),,drop=F]
#x$login<-NA
#x$account.owner<-NA
#churnreal2<-rbind(churnreal,x)
#write.table(churnreal2, file = "churnMoip.csv", sep = ";", na = "",row.names=FALSE,dec=",")
##queda brusca
#gooMerge$queda<-100*gooMerge$`TPV Mes -1`/gooMerge$`TPV Mes -2`
#p_churn<- gooMerge[!is.na(gooMerge$queda) & gooMerge$queda<=20 & gooMerge$Faturamento_Grupo%in%c("F3","F4","F5","F6","F7"),,]
##calcula difetenc?a pro hub
#x<-setdiff(gooMerge$Account.Id,TPVsaida$Account.Id)
#investigar<-gooMerge[gooMerge$Account.Id%in%x & gooMerge$ConditionN=="ATIVO" & gooMerge$Faturamento_Grupo%in%c("F3","F4","F5","F6","F7") & (gooMerge$Integrador=="" | gooMerge$Integrador==";"| gooMerge$Integrador==";                                                                           "),,drop=F]
##escreve arquivos de saida
#write.table(gooMerge, file = "gooMerge.csv", sep = ";", na = "",row.names=FALSE,dec=",")
#write.table(investigar, file = "investigar.csv", sep = ";", na = "",row.names=FALSE,dec=",")
#write.table(investigar, file = "churn.csv", sep = ";", na = "",row.names=FALSE,dec=",")
library(hubspotAPI)
library(hubspotAPI)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
library(shiny)
library(shinydashboard)
library(magrittr)
library(httr)
library(jsonlite)
library(plyr)
library(dplyr)
library(grid)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(zoo)
library(reshape2)
library(tidyr)
library(hubspotAPI)
library(rsconnect)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
runApp(host = "0.0.0.0", port = 5050)
library(googlesheets)
library(hubspotAPI)
library(httr)
library(jsonlite)
library(plyr)
library(dplyr)
library(grid)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(zoo)
library(reshape2)
library(tidyr)
setwd("C:/Users/mauricio.chigutti/Google Drive/Atualiza Tudo Hub")
token <- gs_auth(cache = FALSE)
gd_token()
saveRDS(token, file = "googlesheets_token.rds")
gs_auth(token = "googlesheets_token.rds")
gs_user()
my_sheets <- gs_ls()
View(my_sheets)
GAP_KEY <- "1Fj5fdoDe226OujvT37hc47gg9bnkWxND1hrSWgjehsI"
homolog <- GAP_KEY %>% gs_key()
h <- gs_read(homolog)
View(h)
library(dplyr)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(zoo)
library(reshape2)
library(tidyr)
library(googlesheets)
####################################
####################################
##FUNCOES##
calculaRisco <- function(pormes,meses,pqueda){
#pormes<-smmes
#meses<-6
#pqueda<-0.9
pormes$anomes <- as.yearmon(paste(pormes$month,"/",pormes$year,sep=""),"%m/%Y")
pormes<-pormes[,c(1,4,6)]
#pega seis meses atras
tabela<-pormes[pormes$anomes>=as.yearmon(as.Date(as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")) -((meses)/12), frac = 1))&
pormes$anomes<as.yearmon(as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo")),]
tabela<-spread(tabela, key = anomes, value = TPV.month)
tabela<-na.omit(tabela)
for (i in 1:(meses-1)){
tabela[,(dim(tabela)[2]+1)] <- tabela[,i+2]/tabela[,i+1]<=pqueda
}
tabela$enviar.risco<- rowSums(tabela[,((meses+2):(2*meses))])>=(meses-2)
tabela$enviar.risco<- tabela[,dim(tabela)[2]-1]&tabela[,dim(tabela)[2]]
desaceleraRisco<-tabela[tabela$enviar.risco==TRUE,]
write.table(desaceleraRisco, file = paste("C:/Users/mauricio.chigutti/Google Drive/Risco/desaceleraRisco-",as.Date(now(),"%Y-%m-%d", tz="America/Sao_Paulo"),".csv",sep=""), sep = ";", na = "",row.names=FALSE,dec=",")
final <- tabela[,c(1,dim(tabela)[2])]
return(final)
}
planilhaIdVendedor <- function (hubspot){
hubspot <- hubspot[hubspot$Owner.ID!="",]
hubspot <- hubspot[order(hubspot$Owner.ID),]
write.table(hubspot, file = paste("C:/Users/mauricio.chigutti/Google Drive/Clientes do Comercial/clientesComercial.csv",sep=""), sep = ";", na = "",row.names=FALSE)
}
####################################
####################################
##DATA FROM THE LAST 6 years only##
setwd("C:/Users/mauricio.chigutti/Google Drive/Atualiza Tudo Hub")
## baixar em https://analytics.totvs.com.br/#s=/gdc/projects/v0jnh3a7fn8elqtifaa0fjuy16pphbvr|analysisPage|head|/gdc/md/v0jnh3a7fn8elqtifaa0fjuy16pphbvr/obj/67752
## TPV authorized, Receita Authorized, Date, account id, super integrator, user category (sem deposito e transf)
goodata<-read.csv("tpv_cond_fat_plat link by id by day.csv")
names(goodata)<- c("Account.Id","ConditionN","Payment.Form","Date", "Integrador", "TPV", "Receita")
goodata$Date<-as.Date(goodata$Date, "%d-%m-%Y")
goodata2<-goodata
goodata2$Integrador<- as.character(goodata2$Integrador)
goodata2$month <- month(goodata2$Date)
goodata2$year <- year(goodata2$Date)
##baixar https://app.hubspot.com/lists/253924/list/2369/
##todos contatos do hubspot com Email, TPV hoje, TPV Mes -1, TPV Mes -2, Account ID,  faturamento_grupo,
##TPV Mes, TPV ontem, Condition, TPV Projetado, TPV TOtal, Receita Mes, Receita Total, plataforma_bd, TPV Max
hubspot<-read.csv("hubspot-contacts-all-contacts-com-account-id.csv",fileEncoding = "UTF-8-BOM")
hubspot2<-hubspot[,c(which(names(hubspot)=="Email"),which(names(hubspot)=="Account.Id"))]
#####################################
####READ Sheets from INTEGRATION TEAM
#####################################
gs_auth(token = "googlesheets_token.rds")
gs_user()
GAP_KEY <- "1Fj5fdoDe226OujvT37hc47gg9bnkWxND1hrSWgjehsI"
homolog <- GAP_KEY %>% gs_key()
planilhaH <- gs_read(homolog)
setwd("C:/Users/mauricio.chigutti/Google Drive/API Integration/Funil Hubspot")
contatosD <- suppressWarnings(arrangeDate (read.csv("contatos.csv", sep = ",",stringsAsFactors = FALSE)))
unique(contatosD$lead_source_new)
unique(contatosD$lead_source_new[order(contatosD$lead_source_new)])
unique(contatosD$hubspot_owner_name)
unique(contatosD$ecommerce_platform)
list("all",c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosLive()$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosLive()$ecommerce_platform))),
which(unique(contatosLive()$ecommerce_platform)==""),
which(unique(contatosLive()$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosLive()$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosLive()$ecommerce_platform)=="Simplo7"))]),
c(unique(contatosD$ecommerce_platform)[c(which(unique(contatosLive()$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosLive()$ecommerce_platform))),
which(unique(contatosLive()$ecommerce_platform)==""))]),
c(unique(contatosD$ecommerce_platform)[c(which(unique(contatosLive()$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosLive()$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosLive()$ecommerce_platform)=="Simplo7"))])
)
list("all",c(1,2,3),c(5,6,7))
vendedor = "Ana Virgínia Leite"
type = "tri"
plataforma = c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosLive()$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosLive()$ecommerce_platform))),
which(unique(contatosLive()$ecommerce_platform)==""),
which(unique(contatosLive()$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosLive()$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosLive()$ecommerce_platform)=="Simplo7"))])
plataforma = c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"))])
plataforma
plataforma = c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosLive()$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosLive()$ecommerce_platform))),
which(unique(contatosLive()$ecommerce_platform)==""),
which(unique(contatosLive()$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosLive()$ecommerce_platform)=="Flexy - Marketplace"), which(unique(contatosLive()$ecommerce_platform)=="VTEX - Marketplace"),
which(unique(contatosLive()$ecommerce_platform)=="Simplo7"))])
plataforma = c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosLive()$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosLive()$ecommerce_platform))),
which(unique(contatosLive()$ecommerce_platform)==""),
which(unique(contatosLive()$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosLive()$ecommerce_platform)=="Flexy - Marketplace"), which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(unique(contatosLive()$ecommerce_platform)=="Simplo7"))])
plataforma = c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"), which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"))])
filtraContatos(vendedor = vendedor, type = type, ecommerce_platform = plataforma)
filtraContatos(contatosD,vendedor = vendedor, type = type, ecommerce_platform = plataforma)
a = filtraContatos(contatosD,vendedor = vendedor, type = type, ecommerce_platform = plataforma)
View(a)
a = criaFunilComercial(contatosD,vendedor = vendedor, type = type, ecommerce_platform = plataforma)
plotFunilComercial(a)
list("all",c("a","b"),c("d","f"))
list("all",("a","b"),("d","f"))
list("all",list("a","b"),list("d","f"))
a = criaFunilComercial(contatosD, vendedor = vendedor, type = "tri", ecommerce_platform = c("VTEX", "Magento", "PrestaShop", "DlojaVirtual", "WooCommerce", "NuvemShop", "FastCommerce", "Outras", "BSeller", "iSet", "Moovin", "Ciashop", "Bis2bis", "EZCommerce", "Irroba", "Wave IT", "Xtech", "Shopify", "SoluçõesNet", "Jet ecommerce", "Webstore", "Web4business", "Webstorm", "Dotstore", "LojasVirtuaisBR", "Tray", "ShopDelivery", "ECShop", "Open Cart", "BizCommerce", "Dooca", "LojaVirtual", "BoxLoja", "001hosting", "F1 Soluções", "Dzaine", "Minestore", "Samba Marketing", "Jumptec", "Edools", "N49", "Rakuten", "HappyBiz", "Loja Integrada"))
plotFunilComercial(a)
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD)$ecommerce_platform)=="VTEX - Marketplace"),
which(contatosD$ecommerce_platform)=="Simplo7"))])
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD)$ecommerce_platform)=="VTEX - Marketplace"),
which(contatosD$ecommerce_platform)=="Simplo7"))]))
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(contatosD$ecommerce_platform)=="Simplo7"))]))
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(contatosD$ecommerce_platform)=="Simplo7"))])
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD)$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"))]))
list("All" = "all",
"Plataforma" =  c(unique(contatosD$ecommerce_platform)[-c(which(unique(contatosD$ecommerce_platform)=="Desenvolvimento próprio"),
which(is.na(unique(contatosD$ecommerce_platform))),
which(unique(contatosD$ecommerce_platform)==""),
which(unique(contatosD$ecommerce_platform)=="Marketplace próprio"),
which(unique(contatosD$ecommerce_platform)=="Flexy - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="VTEX - Marketplace"),
which(unique(contatosD$ecommerce_platform)=="Simplo7"))]))
